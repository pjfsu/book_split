BEGIN

# Initialize error codes and messages (to be defined in the future)
SET error_code_1
SET error_code_2
SET error_code_3
SET error_code_4
SET error_code_5

SET error_message_1
SET error_message_2
SET error_message_3
SET error_message_4
SET error_message_5

# Check input file length
SET input_files_length TO script parameters length

IF input_files_length != 2 THEN
    PRINT error_message_1
    EXIT WITH error_code_1
END IF

# Assign variables to input files
SET pdf TO the PDF file to be split
SET csv TO the CSV file containing ranges

# Check if files exist
IF pdf NOT exist OR csv NOT exist THEN
    PRINT error_message_2
    EXIT WITH error_code_2
END IF

# Check if files are readable
IF pdf NOT readable OR csv NOT readable THEN
    PRINT error_message_3
    EXIT WITH error_code_3
END IF

# Validate PDF file
IF pdf NOT valid pdf file THEN
    PRINT error_message_4
    EXIT WITH error_code_4
END IF

# Get the directory of the PDF file
SET pdf_dir TO pdf directory

# Check if directory is writable
IF pdf_dir NOT writable THEN
    PRINT error_message_5
    EXIT WITH error_code_5
END IF

# Set output directory name
SET outdir TO pdf name without .pdf extension

# Create output directory if it doesn't exist
IF outdir NOT exist THEN
    CREATE directory outdir
END IF

# Get total number of pages in the PDF
SET pdf_total_pages TO total number of pages in pdf

# Process each row in the CSV file
FOR EACH row IN csv DO
    SET first_column TO row[1]
    SET second_column TO row[2]
    SET third_column TO row[3]

    # Validate row values
    IF first_column > 0 AND
       second_column > 0 AND
       third_column != "" AND
       first_column <= second_column AND
       second_column <= pdf_total_pages THEN

        # Split PDF and rename new file
        SPLIT pdf FROM first_column TO second_column
        RENAME the new file using third_column
        SAVE the new PDF to outdir
    END IF
END FOR

END
